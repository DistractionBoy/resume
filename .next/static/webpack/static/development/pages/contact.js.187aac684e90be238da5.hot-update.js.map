{"version":3,"file":"static/webpack/static/development/pages/contact.js.187aac684e90be238da5.hot-update.js","sources":["webpack:///./pages/contact.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Layout from '../components/Layout';\nimport Sectiontitle from \"../components/Sectiontitle\";\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport RoomIcon from '@material-ui/icons/Room';\n\nconst metaData = {\n    title: `Contact Mr. Jason Pierce`,\n    description: `Want to reach me directly? Fill out the form and I'll get the message sent straight to my phone`,\n    keywords: 'Jason Pierce, Contact me, direct hire'\n};\n\nconst ContactPage = () => {\n    const [phoneNumbers, setPhoneNumbers] = useState([]);\n    const [emailAddress, setEmailAddress] = useState([]);\n    const [address, setAddress] = useState([]);\n    const [formdata, setFormdata] = useState({\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\"\n    });\n    const [error, setError] = useState(false);\n    const [message, setMessage] = useState(\"\");\n  \n    const submitHandler = (event) =>{\n      event.preventDefault();\n      if( !formdata.name ){\n        setError(true);\n        setMessage('Name is required');\n      } else if( !formdata.email ){\n        setError(true);\n        setMessage('Email is required');\n      } else if( !formdata.subject ){\n        setError(true);\n        setMessage('Subject is required');\n      } else if( !formdata.message ){\n        setError(true);\n        setMessage('Message is required');\n      } else{\n        setError(false);\n        setMessage('You message has been sent!!!');\n      }\n    }\n    const handleChange = (event) => {\n      setFormdata({\n        ...formdata,\n        [event.currentTarget.name] : event.currentTarget.value\n      })\n    }\n    const numberFormatter = (number) =>{\n      const phnNumber = number;\n      return phnNumber;\n    }\n  \n    const handleAlerts = () => {\n      if(error && message){\n        return (\n          <div className=\"alert alert-danger mt-4\">\n            {message}\n          </div>\n        )\n      } else if(!error && message){\n        return (\n          <div className=\"alert alert-success mt-4\">\n            {message}\n          </div>\n        )\n      } else{\n        return null;\n      }\n    }\n  \n    useEffect(() => {\n      axios.get('/api/contactinfo')\n        .then(response =>{\n          setPhoneNumbers(response.data.phoneNumbers);\n          setEmailAddress(response.data.emailAddress);\n          setAddress(response.data.address);\n        })\n    }, [])\n  \n    return (\n      <Layout pageMetaData={metaData} >\n        <div className=\"mi-contact-area mi-section mi-padding-top mi-padding-bottom\">\n          <div className=\"container\">\n            <Sectiontitle title=\"Contact Me\"/>\n            <div className=\"row\">\n              {/* <div className=\"col-lg-6\">\n                <div className=\"mi-contact-formwrapper\">\n                  <h4>Get In Touch</h4>\n                  <form action=\"#\" className=\"mi-form mi-contact-form\" onSubmit={submitHandler}>\n                    <div className=\"mi-form-field\">\n                      <label htmlFor=\"contact-form-name\">Enter your name*</label>\n                      <input onChange={handleChange} type=\"text\" name=\"name\" id=\"contact-form-name\" value={formdata.name}/>\n                    </div>\n                    <div className=\"mi-form-field\">\n                      <label htmlFor=\"contact-form-email\">Enter your email*</label>\n                      <input onChange={handleChange} type=\"text\" name=\"email\" id=\"contact-form-email\" value={formdata.email}/>\n                    </div>\n                    <div className=\"mi-form-field\">\n                      <label htmlFor=\"contact-form-subject\">Enter your subject*</label>\n                      <input onChange={handleChange} type=\"text\" name=\"subject\" id=\"contact-form-subject\" value={formdata.subject}/>\n                    </div>\n                    <div className=\"mi-form-field\">\n                      <label htmlFor=\"contact-form-message\">Enter your Message*</label>\n                      <textarea onChange={handleChange} name=\"message\" id=\"contact-form-message\" cols=\"30\" rows=\"6\" value={formdata.message}></textarea>\n                    </div>\n                    <div className=\"mi-form-field\">\n                      <button className=\"mi-button\" type=\"submit\">Send Mail</button>\n                    </div>\n                  </form>\n                  {handleAlerts()}\n                </div>\n              </div> */}\n              <div className=\"col-lg-12\">\n                <div className=\"mi-contact-info\">\n                  {!phoneNumbers ? null : (\n                    <div className=\"mi-contact-infoblock\">\n                      <span className=\"mi-contact-infoblock-icon\">\n                        <PhoneAndroidIcon/>\n                      </span>\n                      <div className=\"mi-contact-infoblock-content\">\n                        <h6>Phone</h6>\n                        {phoneNumbers.map(phoneNumber =>(\n                          <p key={phoneNumber}><a href={numberFormatter(phoneNumber)}>{phoneNumber}</a></p>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  {!emailAddress ? null : (\n                    <div className=\"mi-contact-infoblock\">\n                      <span className=\"mi-contact-infoblock-icon\">\n                        <MailOutlineIcon/>\n                      </span>\n                      <div className=\"mi-contact-infoblock-content\">\n                        <h6>Email</h6>\n                        {emailAddress.map(email => (\n                          <p key={email}><a href={`mailto:${email}`}>{email}</a></p>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  {!phoneNumbers ? null : (\n                    <div className=\"mi-contact-infoblock\">\n                      <span className=\"mi-contact-infoblock-icon\">\n                        <RoomIcon/>\n                      </span>\n                      <div className=\"mi-contact-infoblock-content\">\n                        <h6>Address</h6>\n                        <p>{address}</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n};\n\nexport default ContactPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AACA;AACA;AAJA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}